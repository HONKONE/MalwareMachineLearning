from numpy import *
import sys

class GetGLCM(object):
    def __init__(self,grayValue,zeroMatrix):
        self.grayValue=grayValue
        self.grayzeroMatrix=zeroMatrix
        self.ChangeCount=0
        self.GetGrayWH()

    '''
    grayValue is matrix of Grayscale picture
    m_grayMatrix is Gray scale co-occurrence matrix generated by gray matrix
    and this functiuon will return the Gray scale co-occurence matrix and the count of point

    gray matrix to Gray scale co-occurrence matrix have deffent direction
    like 0 degrees ,45 degrees
    We can calculate the gray-order co-occurence matrix in 360 degrees, 
    and we can calculate the gray scale co-occurence matrix of more than 1 distances according to the distance provided, 
    but the default is 1.

    !!!grayValue must be the matrix
    '''
    def GetGrayCoocurrenceMatrix(self,grayValue,m_grayMatrix,GLCM_distence=1,choice_distences=0):
        if choice_distences==0:
            if int(self.GrayWeigth)-int(GLCM_distence)<=0:
                raise ValueError("Your ImgaeMatrix is to small")
            else:
                '''
                subscript should be Subtract 1
                simple example
                '''
                for i in range(0,self.GrayWeigth-GLCM_distence-1):
                    for j in range(0,self.GrayHight-1):
                        t_i=i+1
                        t_j=j
                        d_1=int(self.grayValue[i][j])
                        d_2=int(self.grayValue[t_i][t_j])
                        self.grayzeroMatrix[d_1][d_2]=int(self.grayzeroMatrix[d_1][d_2])+1
                        self.ChangeCount+=1
        elif choice_distences==45:
            for i in range(0,self.GrayWeigth-GLCM_distence-1):
                for j in range(1,self.GrayHight):
                    self.grayzeroMatrix[int(grayValue[i][j])][self.grayValue[i+1][j]]+=1
                    self.ChangeCount+=1
        else:
            raise ValueError("there have no function for this degrees\nyou can write own function for this degrees")
                    

    
    def GetGrayWH(self):
        if not isinstance(self.grayValue,ndarray):
            raise TypeError("Your GrayValue is {0} GrayValue must be the martix".format(str(type(self.grayValue))))
        else:
            self.GrayHight=int(self.grayValue.shape[0])
            self.GrayWeigth=int(self.grayValue.shape[1])

'''
return a zero matrix
'''
def InitGrayZeroMatix(weight=256,hight=256):
    return zeros([weight,hight],int)

if __name__=="__main__":
    print InitGrayZeroMatix()[0][0]
    # print GetGLCM(InitGrayZeroMatix()).GrayHight
    


