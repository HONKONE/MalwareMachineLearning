#encoding:utf-8
from sklearn import svm
import sklearn
import numpy as np
import os
import matplotlib.pyplot as plt
import matplotlib as mpl

def iris_type(s):
    it = {'Iris-setosa': 0, 'Iris-versicolor': 1, 'Iris-virginica': 2}
    return it[s]

path =  os.path.join(os.path.dirname(__file__),"iris.txt") # 数据文件路径
data = np.loadtxt(path, dtype=float, delimiter=',', converters={4: iris_type})
x,y = np.split(data, (4,), axis=1)
x = x[:, :2]
x_train, x_test, y_train, y_test = sklearn.model_selection.train_test_split(x, y, random_state=1, train_size=0.6)
clf = svm.SVC(C=2, kernel='rbf', gamma=20, decision_function_shape='ovr')
clf.fit(x_train, y_train.ravel())
# print 'decision_function:\n', clf.decision_function(x_train)
# print '\npredict:\n', clf.predict(x_train)
print clf.predict([[4.5,4.2]])
x1_min, x1_max = x[:, 0].min(), x[:, 0].max()  # 第0列的范围
x2_min, x2_max = x[:, 1].min(), x[:, 1].max()  # 第1列的范围
x1, x2 = np.mgrid[x1_min:x1_max:200j, x2_min:x2_max:200j]  # 生成网格采样点
grid_test = np.stack((x1.flat, x2.flat), axis=1)  # 测试点
print 'grid_test = \n'
grid_testgrid_hat = clf.predict(grid_test) 
#预测分类值
grid_hat = clf.predict(grid_test)
grid_hat = grid_hat.reshape(x1.shape)
rid_hat = grid_hat.reshape(x1.shape)
mpl.rcParams['font.sans-serif'] = [u'SimHei']
mpl.rcParams['axes.unicode_minus'] = False
cm_light = mpl.colors.ListedColormap(['#A0FFA0', '#FFA0A0', '#A0A0FF'])
cm_dark = mpl.colors.ListedColormap(['g', 'r', 'b'])
y=[_[0] for _ in y]
plt.pcolormesh(x1, x2, grid_hat, cmap=cm_light)
plt.scatter(x[:, 0], x[:, 1],c=y, edgecolors='k', s=50, cmap=cm_dark)  # 样本
plt.scatter(x_test[:, 0], x_test[:, 1], s=120, facecolors='none', zorder=10)  # 圈中测试集样本
plt.scatter([4.5],[4.2],c='y',marker='*',s=50)
plt.xlabel(u'x', fontsize=13)
plt.ylabel(u'y', fontsize=13)
plt.xlim(x1_min, x1_max)
plt.ylim(x2_min, x2_max)
plt.title(u'sample_SVM', fontsize=15)
# plt.grid()
plt.show()