#!/usr/bin python

import re
import os
from collections import *
import pandas


'''
our OpenCode data file is just used in linux
we use objdump to reserve the Execute file to source code
objdump shell  is objdump -d .text filename > basefilename.dump
if you want known more objdump infomation
you can just run objdump to show more 
'''
def get_OpenCode_list(FileName):
    opencode_a=[]
    flag=False
    with open(FileName,'rb') as fp:
        for line in fp:   
            if not flag:
                if str(line).find("<.text>")>=0:
                    flag=True
                continue
            codesplit=str(line.replace('\n','')).split(" 	")
            if len(codesplit)>1:
                codesplit=codesplit[1].split(" ")[0]
                if codesplit!="nop":
                    opencode_a.append(codesplit)
        fp.close()
    return opencode_a

def getOpenCodeNgram(opencodeList,n=3):
    opngramlist = [tuple(opencodeList[i:i+n]) for i in range(len(opencodeList)-n)]
    opngram = Counter(opngramlist)
    return opngram

    
            
            
            
            
            
        

if __name__ == "__main__":
    path="D:/MY_CODE/MalwareMachineLearning/MalwareMachineLearning/sample/CrackMe.txt"
    ops=get_OpenCode_list(path)
    s=defaultdict(Counter)
    # s[0]=getOpenCodeNgram(ops,n=4)
    s[0]=getOpenCodeNgram(ops,n=2)
    s[1]=getOpenCodeNgram(ops,n=3)
    cc = Counter([])
    for d in s.values():
        cc += d
    selectfeature={}
    tc=0
    for k,v in cc.iteritems():
        if v >=8:
            selectfeature[k]=v
            tc+=1
    dataframelist=[]
    for fid,opgram in s.iteritems():
        standard={}
        standard["Id"]=fid
        for feature in selectfeature:
            if feature in s:
                standard[feature]=s[feature]
            else:
                standard[feature]=0
        dataframelist.append(standard)
    df=pandas.DataFrame(dataframelist)
    df.to_csv("xxxxxx.csv",index=False)
        